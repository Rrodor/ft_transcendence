version: '3'

volumes:
  static_volume: {}
  medias_volume: {}
  imgs_volume: {}
  postgres_data: {}

services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: trans
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
    ports:
      - "5433:5432"

  django:
    build:
      context: .
      dockerfile: Dockerfile.django.prod
    command: gunicorn transcendence.wsgi:application --bind 0.0.0.0:8001 --workers 3 --worker-class gevent
    ports:
      - "8001:8001"
    volumes:
      - static_volume:/app/productionfiles
      - medias_volume:/app/medias
      - imgs_volume:/app/imgs
    depends_on:
      - postgres

  static_manager:
    build:
      context: .
      dockerfile: Dockerfile.static_manager.prod
    volumes:
      - static_volume:/app/productionfiles
      - ./static:/app/static
    depends_on:
      - django
    command: bash -c "find /app/productionfiles -mindepth 1 ! -regex '^/app/productionfiles/admin.*' -delete && cp -r /app/static/* /app/productionfiles/"

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx.prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - static_manager
    volumes:
      - static_volume:/app/productionfiles
      - medias_volume:/app/medias
      - imgs_volume:/app/imgs

  talker:
    build:
      context: .
      dockerfile: Dockerfile.talker.prod
    depends_on:
      - nginx